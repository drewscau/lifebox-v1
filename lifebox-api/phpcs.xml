<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="PHP_CodeSniffer" xsi:noNamespaceSchemaLocation="phpcs.xsd">
    <description>The coding standard for PHP_CodeSniffer itself.</description>

    <file>autoload.php</file>
    <file>bin</file>
    <file>scripts</file>
    <file>src</file>
    <file>tests</file>

    <exclude-pattern>*/src/Standards/*/Tests/*\.(inc|css|js)$</exclude-pattern>
    <exclude-pattern>*/tests/Core/*/*\.(inc|css|js)$</exclude-pattern>
    <exclude-pattern>*/app/Http/Controllers/FileCustomController.php</exclude-pattern>
    <exclude-pattern>*/app/Http/Controllers/PaymentController.php</exclude-pattern>
    <exclude-pattern>*/app/Http/Controllers/FileController.php</exclude-pattern>
    <exclude-pattern>*/app/Http/Controllers/MeController.php</exclude-pattern>
    <exclude-pattern>*/app/Http/Controllers/PushNotificationController.php</exclude-pattern>
    <exclude-pattern>*/app/Http/Controllers/TagPropertyController.php</exclude-pattern>
    <exclude-pattern>*/app/Http/Controllers/UserAdminController.php</exclude-pattern>
    <exclude-pattern>*/app/Http/Controllers/ResetPasswordController.php</exclude-pattern>
    <exclude-pattern>*/app/Http/Controllers/FileTagPropController.php</exclude-pattern>
    <exclude-pattern>*/app/Http/Controllers/LoginController.php</exclude-pattern>
    <exclude-pattern>*/app/Http/Controllers/VerificationController.php</exclude-pattern>
    <exclude-pattern>*/app/Http/Controllers/FileTagController.php</exclude-pattern>
    <exclude-pattern>*/app/Http/Controllers/ReminderController.php</exclude-pattern>
    <exclude-pattern>*/app/Http/Middleware/*</exclude-pattern>
    <exclude-pattern>*/app/Services/*</exclude-pattern>
    <exclude-pattern>*/app/Serializers/*</exclude-pattern>
    <exclude-pattern>*/app/Providers/*</exclude-pattern>
    <exclude-pattern>*/app/Observers/*</exclude-pattern>
    <exclude-pattern>*/app/Models/*</exclude-pattern>
    <exclude-pattern>*/app/Mail/*</exclude-pattern>
    <exclude-pattern>*/app/Console/*</exclude-pattern>
    <exclude-pattern>*/app/Exceptions/*</exclude-pattern>

    <arg name="basepath" value="."/>
    <arg name="colors"/>
    <arg name="parallel" value="75"/>
    <arg value="np"/>

    <!-- Don't hide tokenizer exceptions -->
    <rule ref="Internal.Tokenizer.Exception">
        <type>error</type>
    </rule>

    <!-- Include some sniffs from other standards that don't conflict with PEAR -->
    <rule ref="PSR2.Classes.PropertyDeclaration"/>
    <rule ref="PSR2.Methods.MethodDeclaration"/>
    <rule ref="PSR2.Files.EndFileNewline"/>
    <rule ref="PSR12.Files.OpenTag"/>
    <rule ref="Zend.Files.ClosingTag"/>

    <!-- PEAR uses warnings for inline control structures, so switch back to errors -->
    <rule ref="Generic.ControlStructures.InlineControlStructure">
        <properties>
            <property name="error" value="true"/>
        </properties>
    </rule>

    <!-- We use custom indent rules for arrays -->
    <rule ref="Generic.Arrays.ArrayIndent"/>
    <rule ref="Squiz.Arrays.ArrayDeclaration.KeyNotAligned">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.ValueNotAligned">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.CloseBraceNewLine">
        <severity>0</severity>
    </rule>
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="100"/>
            <property name="absoluteLineLimit" value="120"/>
        </properties>
    </rule>

    <!-- Check var names, but we don't want leading underscores for private vars -->
    <rule ref="Squiz.NamingConventions.ValidVariableName">
        <type>warning</type>
    </rule>
    <rule ref="Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore">
        <severity>0</severity>
    </rule>

    <!-- Only one argument per line in multi-line function calls -->
    <rule ref="PEAR.Functions.FunctionCallSignature">
        <properties>
            <property name="allowMultipleArguments" value="false"/>
        </properties>
    </rule>

    <!-- Ban some functions -->
    <rule ref="Generic.PHP.ForbiddenFunctions">
        <properties>
            <property name="forbiddenFunctions" type="array">
                <element key="sizeof" value="count"/>
                <element key="delete" value="unset"/>
                <element key="print" value="echo"/>
                <element key="is_null" value="null"/>
                <element key="create_function" value="null"/>
            </property>
        </properties>
    </rule>

    <!-- Private methods MUST not be prefixed with an underscore -->
    <rule ref="PSR2.Methods.MethodDeclaration.Underscore">
        <type>error</type>
    </rule>

    <!-- Private properties MUST not be prefixed with an underscore -->
    <rule ref="PSR2.Classes.PropertyDeclaration.Underscore">
        <type>error</type>
    </rule>

    <rule ref="PSR2.Classes.ClassDeclaration">
        <type>error</type>
    </rule>

    <!-- The testing bootstrap file uses string concats to stop IDEs seeing the class aliases -->
    <rule ref="Generic.Strings.UnnecessaryStringConcat">
        <exclude-pattern>tests/bootstrap\.php</exclude-pattern>
    </rule>

    <rule ref="Generic.Formatting.DisallowMultipleStatements">
        <type>error</type>
    </rule>

    <rule ref="Generic.Formatting.SpaceAfterCast">
        <type>error</type>
    </rule>

    <rule ref="Generic.Metrics.NestingLevel">
        <type>error</type>
    </rule>

    <rule ref="Generic.PHP.UpperCaseConstant">
        <type>warning</type>
    </rule>

    <rule ref="Generic.NamingConventions.ConstructorName">
        <type>error</type>
    </rule>
    <rule ref="Generic.NamingConventions.CamelCapsFunctionName">
        <type>error</type>
    </rule>

    <rule ref="PEAR.ControlStructures.MultiLineCondition"/>
    <rule ref="PEAR.ControlStructures.ControlSignature"/>
    <rule ref="PEAR.Functions.FunctionCallSignature"/>
    <rule ref="PEAR.Functions.FunctionDeclaration"/>
    <rule ref="PEAR.Functions.ValidDefaultValue"/>
    <rule ref="PSR2.ControlStructures.ControlStructureSpacing"/>
    <rule ref="PSR2.ControlStructures.ElseIfDeclaration"/>
    <rule ref="PSR2.Files.EndFileNewline"/>
    <rule ref="PSR2.Namespaces.NamespaceDeclaration"/>
    <rule ref="PSR2.Namespaces.UseDeclaration"/>

    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>
    <rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>
    <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>
    <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace"/>
    <rule ref="Squiz.Scope.MethodScope"/>
    <rule ref="Squiz.Scope.MemberVarScope"/>
    <rule ref="Squiz.PHP.InnerFunctions"/>
    <rule ref="Squiz.Scope.StaticThisUsage"/>
    <rule ref="Squiz.PHP.GlobalKeyword"/>
    <rule ref="Squiz.PHP.DisallowMultipleAssignments"/>
    <rule ref="Squiz.PHP.CommentedOutCode">
        <properties>
            <property name="maxPercentage" value="20"/>
        </properties>
    </rule>

    <rule ref="Squiz.PHP.DiscouragedFunctions">
        <properties>
            <property name="error" value="true"/>
        </properties>
    </rule>

</ruleset>
